{"ast":null,"code":"var _jsxFileName = \"/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      music: [],\n      album: {}\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const list = await getMusics(params.id);\n    this.setState({\n      album: list[0],\n      music: list[1]\n    });\n  }\n\n  render() {\n    const {\n      album,\n      music\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","getMusics","Album","Component","state","music","album","componentDidMount","match","params","props","list","id","setState","render","propTypes","shape","string","isRequired"],"sources":["/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  state = {\n    music: [],\n    album: {},\n  };\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    const list = await getMusics(params.id);\n    this.setState({\n      album: list[0],\n      music: list[1],\n    });\n  }\n\n  render() {\n    const { album, music } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAClCC,KADkC,GAC1B;MACNC,KAAK,EAAE,EADD;MAENC,KAAK,EAAE;IAFD,CAD0B;EAAA;;EAMX,MAAjBC,iBAAiB,GAAG;IACxB,MAAM;MAAEC,KAAK,EAAE;QAAEC;MAAF;IAAT,IAAwB,KAAKC,KAAnC;IACA,MAAMC,IAAI,GAAG,MAAMV,SAAS,CAACQ,MAAM,CAACG,EAAR,CAA5B;IACA,KAAKC,QAAL,CAAc;MACZP,KAAK,EAAEK,IAAI,CAAC,CAAD,CADC;MAEZN,KAAK,EAAEM,IAAI,CAAC,CAAD;IAFC,CAAd;EAID;;EAEDG,MAAM,GAAG;IACP,MAAM;MAAER,KAAF;MAASD;IAAT,IAAmB,KAAKD,KAA9B;IACA,oBACE;MAAK,eAAY,YAAjB;MAAA,uBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAtBiC;;AAyBpCF,KAAK,CAACa,SAAN,GAAkB;EAChBP,KAAK,EAAET,SAAS,CAACiB,KAAV,CAAgB;IACrBP,MAAM,EAAEV,SAAS,CAACiB,KAAV,CAAgB;MACtBJ,EAAE,EAAEb,SAAS,CAACkB;IADQ,CAAhB;EADa,CAAhB,EAIJC;AALa,CAAlB;AAQA,eAAehB,KAAf"},"metadata":{},"sourceType":"module"}