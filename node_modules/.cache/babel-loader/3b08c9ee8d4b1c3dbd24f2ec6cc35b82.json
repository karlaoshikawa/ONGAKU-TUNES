{"ast":null,"code":"var _jsxFileName = \"/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      music: [],\n      album: {},\n      loading: false,\n      best: [],\n      musicFav: []\n    };\n\n    this.songList = async id => {\n      const list = await getMusics(id);\n      this.setState({\n        album: list[0],\n        music: list.slice(1)\n      });\n    };\n\n    this.checkedOk = ongaku => {\n      const {\n        best\n      } = this.state;\n      return best.some(fav => fav.trackId === (ongaku === null || ongaku === void 0 ? void 0 : ongaku.trackId));\n    };\n\n    this.favorita = async ongaku => {\n      if (this.checkedOk(ongaku)) {\n        this.setState({\n          loading: true\n        });\n        await removeSong(ongaku);\n        best.filter(e => e.trackId !== (ongaku === null || ongaku === void 0 ? void 0 : ongaku.trackId));\n        this.setState({\n          loading: false,\n          best\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        await addSong(ongaku);\n        this.setState(prevState => ({\n          loading: false,\n          best: [...prevState.best, ongaku]\n        }));\n      }\n    };\n\n    this.favoriteMusic = async () => {\n      const getFavorite = await getFavoriteSongs();\n      const favoriteList = getFavorite.reduce((acc, curr) => ({ ...acc,\n        [curr.trackId]: true\n      }), []);\n      this.setState({\n        musicFav: favoriteList\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    this.songList(params.id);\n    this.favoriteMusic();\n  }\n\n  render() {\n    const {\n      album,\n      music,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"artist-name\",\n          children: album.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: album.artworkUrl100,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"album-name\",\n          children: album.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), music.map(item => /*#__PURE__*/_jsxDEV(MusicCard, { ...item,\n          checked: this.checkedOk(item),\n          favorita: this.favorita\n        }, item.trackName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","getMusics","MusicCard","addSong","removeSong","getFavoriteSongs","Loading","Album","Component","state","music","album","loading","best","musicFav","songList","id","list","setState","slice","checkedOk","ongaku","some","fav","trackId","favorita","filter","e","prevState","favoriteMusic","getFavorite","favoriteList","reduce","acc","curr","componentDidMount","match","props","params","render","artistName","artworkUrl100","collectionName","map","item","trackName","propTypes","shape","string","isRequired"],"sources":["/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\n\nclass Album extends React.Component {\n  state = {\n    music: [],\n    album: {},\n    loading: false,\n    best: [],\n    musicFav: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    this.songList(params.id);\n    this.favoriteMusic();\n  }\n\n  songList = async (id) => {\n    const list = await getMusics(id);\n    this.setState({\n      album: list[0],\n      music: list.slice(1),\n    });\n  };\n\n  checkedOk = (ongaku) => {\n    const { best } = this.state;\n    return best.some((fav) => fav.trackId === ongaku?.trackId);\n  };\n\n  favorita = async (ongaku) => {\n    if (this.checkedOk(ongaku)) {\n      this.setState({ loading: true });\n      await removeSong(ongaku);\n      best.filter((e) => e.trackId !== ongaku?.trackId);\n      this.setState({ loading: false, best });\n    } else {\n      this.setState({ loading: true });\n      await addSong(ongaku);\n      this.setState((prevState) => ({ loading: false,\n        best: [...prevState.best, ongaku] }));\n    }\n  };\n\n  favoriteMusic = async () => {\n    const getFavorite = await getFavoriteSongs();\n    const favoriteList = getFavorite.reduce((acc, curr) => ({\n      ...acc,\n      [curr.trackId]: true,\n    }), []);\n    this.setState({\n      musicFav: favoriteList,\n    });\n  };\n\n  render() {\n    const { album, music, loading } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {loading ? <Loading /> : (\n          <>\n            <h2 data-testid=\"artist-name\">{album.artistName}</h2>\n            <img src={ album.artworkUrl100 } alt=\"\" />\n            <h3 data-testid=\"album-name\">{album.collectionName}</h3>\n            {music.map((item) => (<MusicCard\n              key={ item.trackName }\n              { ...item }\n              checked={ this.checkedOk(item) }\n              favorita={ this.favorita }\n            />))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}