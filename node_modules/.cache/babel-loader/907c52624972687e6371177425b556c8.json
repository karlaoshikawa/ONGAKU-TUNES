{"ast":null,"code":"var _jsxFileName = \"/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Favorites.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.checkedOk = ongaku => {\n      const {\n        best\n      } = this.state;\n      return best.some(fav => fav.trackId === (ongaku === null || ongaku === void 0 ? void 0 : ongaku.trackId));\n    };\n\n    this.favorita = async ongaku => {\n      const {\n        best\n      } = this.state;\n\n      if (this.checkedOk(ongaku)) {\n        this.setState({\n          loading: true\n        });\n        await removeSong(ongaku);\n        const newBest = best.filter(e => e.trackId !== (ongaku === null || ongaku === void 0 ? void 0 : ongaku.trackId));\n        this.setState({\n          loading: false,\n          best: newBest\n        });\n      } else {\n        this.setState({\n          loading: true\n        });\n        this.setState(prevState => ({\n          loading: false,\n          best: [...prevState.best, ongaku]\n        }));\n      }\n    };\n\n    this.state = {\n      loading: true,\n      best: []\n    };\n  }\n\n  async componentDidMount() {\n    const list = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      best: list\n    });\n  } // favoriteList = async () => {\n  //   this.setState({ loading: true });\n  //   await removeSong();\n  //   const list1 = await getFavoriteSongs();\n  //   this.setState({ favList: list1, loading: false });\n  // };\n  // favoriteList = ({ target: { name } }) => {\n  //   this.setState({ loading: true }, () => {\n  //     const { favList } = this.state;\n  //     const obj = favList.find((musica) => +musica.trackId === +name);\n  //     this.removerFav(obj);\n  //   });\n  // };\n\n\n  render() {\n    const {\n      loading,\n      best\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"page-favorites\",\n          children: \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), best.map(fav => /*#__PURE__*/_createElement(MusicCard, { ...fav,\n          key: fav.trackId // checkedOk={ !this.checkedOk(fav) }\n          ,\n          favorita: this.favorita,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"names":["React","Header","Loading","MusicCard","getFavoriteSongs","removeSong","Favorites","Component","constructor","checkedOk","ongaku","best","state","some","fav","trackId","favorita","setState","loading","newBest","filter","e","prevState","componentDidMount","list","render","map"],"sources":["/Users/karlaoshikawa/TRYBE/projetos/sd-025-a-project-trybetunes/src/pages/Favorites.js"],"sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      best: [],\n    };\n  }\n\n  async componentDidMount() {\n    const list = await getFavoriteSongs();\n    this.setState({ loading: false, best: list });\n  }\n\n  // favoriteList = async () => {\n  //   this.setState({ loading: true });\n  //   await removeSong();\n  //   const list1 = await getFavoriteSongs();\n  //   this.setState({ favList: list1, loading: false });\n  // };\n\n  // favoriteList = ({ target: { name } }) => {\n  //   this.setState({ loading: true }, () => {\n  //     const { favList } = this.state;\n  //     const obj = favList.find((musica) => +musica.trackId === +name);\n  //     this.removerFav(obj);\n  //   });\n  // };\n  checkedOk = (ongaku) => {\n    const { best } = this.state;\n    return best.some((fav) => fav.trackId === ongaku?.trackId);\n  };\n\n  favorita = async (ongaku) => {\n    const { best } = this.state;\n    if (this.checkedOk(ongaku)) {\n      this.setState({ loading: true });\n      await removeSong(ongaku);\n      const newBest = best.filter((e) => e.trackId !== ongaku?.trackId);\n      this.setState({ loading: false, best: newBest });\n    } else {\n      this.setState({ loading: true });\n      this.setState((prevState) => ({ loading: false,\n        best: [...prevState.best, ongaku] }));\n    }\n  };\n\n  render() {\n    const { loading, best } = this.state;\n\n    return (\n      <>\n        {loading && <Loading />}\n        {!loading && (\n          <div>\n            <Header />\n            <div data-testid=\"page-favorites\">Favorites</div>\n            {best.map((fav) => (<MusicCard\n              { ...fav }\n              key={ fav.trackId }\n              // checkedOk={ !this.checkedOk(fav) }\n              favorita={ this.favorita }\n            />))}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Favorites;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,8BAA7C;;;;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;EACtCC,WAAW,GAAG;IACZ;;IADY,KA2BdC,SA3Bc,GA2BDC,MAAD,IAAY;MACtB,MAAM;QAAEC;MAAF,IAAW,KAAKC,KAAtB;MACA,OAAOD,IAAI,CAACE,IAAL,CAAWC,GAAD,IAASA,GAAG,CAACC,OAAJ,MAAgBL,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEK,OAAxB,CAAnB,CAAP;IACD,CA9Ba;;IAAA,KAgCdC,QAhCc,GAgCH,MAAON,MAAP,IAAkB;MAC3B,MAAM;QAAEC;MAAF,IAAW,KAAKC,KAAtB;;MACA,IAAI,KAAKH,SAAL,CAAeC,MAAf,CAAJ,EAA4B;QAC1B,KAAKO,QAAL,CAAc;UAAEC,OAAO,EAAE;QAAX,CAAd;QACA,MAAMb,UAAU,CAACK,MAAD,CAAhB;QACA,MAAMS,OAAO,GAAGR,IAAI,CAACS,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACN,OAAF,MAAcL,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEK,OAAtB,CAAnB,CAAhB;QACA,KAAKE,QAAL,CAAc;UAAEC,OAAO,EAAE,KAAX;UAAkBP,IAAI,EAAEQ;QAAxB,CAAd;MACD,CALD,MAKO;QACL,KAAKF,QAAL,CAAc;UAAEC,OAAO,EAAE;QAAX,CAAd;QACA,KAAKD,QAAL,CAAeK,SAAD,KAAgB;UAAEJ,OAAO,EAAE,KAAX;UAC5BP,IAAI,EAAE,CAAC,GAAGW,SAAS,CAACX,IAAd,EAAoBD,MAApB;QADsB,CAAhB,CAAd;MAED;IACF,CA5Ca;;IAEZ,KAAKE,KAAL,GAAa;MACXM,OAAO,EAAE,IADE;MAEXP,IAAI,EAAE;IAFK,CAAb;EAID;;EAEsB,MAAjBY,iBAAiB,GAAG;IACxB,MAAMC,IAAI,GAAG,MAAMpB,gBAAgB,EAAnC;IACA,KAAKa,QAAL,CAAc;MAAEC,OAAO,EAAE,KAAX;MAAkBP,IAAI,EAAEa;IAAxB,CAAd;EACD,CAZqC,CActC;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAoBAC,MAAM,GAAG;IACP,MAAM;MAAEP,OAAF;MAAWP;IAAX,IAAoB,KAAKC,KAA/B;IAEA,oBACE;MAAA,WACGM,OAAO,iBAAI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QADd,EAEG,CAACA,OAAD,iBACC;QAAA,wBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,eAAY,gBAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGP,IAAI,CAACe,GAAL,CAAUZ,GAAD,iBAAU,eAAC,SAAD,OACbA,GADa;UAElB,GAAG,EAAGA,GAAG,CAACC,OAFQ,CAGlB;UAHkB;UAIlB,QAAQ,EAAG,KAAKC,QAJE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAnB,CAHH;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA,gBADF;EAiBD;;AAnEqC;;AAsExC,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}